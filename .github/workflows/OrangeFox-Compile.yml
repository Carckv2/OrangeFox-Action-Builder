name: Full ROM Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'ROM Manifest URL'
        required: true
        default: 'https://github.com/LineageOS/android.git'
      MANIFEST_BRANCH:
        description: 'Manifest Branch'
        required: true
        default: 'lineage-20.0'
      DEVICE_CODENAME:
        description: 'Device Codename'
        required: true
        default: 'water'
      DEVICE_TREE:
        description: 'Device Tree URL'
        required: true
      DEVICE_TREE_BRANCH:
        description: 'Device Tree Branch'
        required: true
        default: 'lineage-20.0'
      VENDOR_TREE:
        description: 'Vendor Tree URL'
        required: true
      VENDOR_TREE_BRANCH:
        description: 'Vendor Tree Branch'
        required: true
        default: 'lineage-20.0'
      KERNEL_TREE:
        description: 'Kernel Tree URL'
        required: true
      KERNEL_BRANCH:
        description: 'Kernel Branch'
        required: true
        default: 'lineage-20.0'
      BUILD_TYPE:
        description: 'Build Variant'
        required: true
        default: 'userdebug'
        type: choice
        options:
          - user
          - userdebug
          - eng

jobs:
  build:
    name: Build ROM
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      SOURCEFORGE_SSH: ${{ secrets.SOURCEFORGE_SSH }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up swap
      uses: pierotofy/set-swap-space@master
      with: swap-size-gb: 24

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y openjdk-11-jdk repo git-core gnupg flex bison build-essential \
        zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev \
        libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip \
        python-is-python3 python3-pip

    - name: Sync ROM Sources
      run: |
        mkdir -p ~/rom && cd ~/rom
        repo init -u ${{ inputs.MANIFEST_URL }} -b ${{ inputs.MANIFEST_BRANCH }}
        repo sync -c --no-tags --no-clone-bundle -j$(nproc)

    - name: Clone Device Tree
      run: |
        cd ~/rom
        git clone ${{ inputs.DEVICE_TREE }} -b ${{ inputs.DEVICE_TREE_BRANCH }} device/xiaomi/${{ inputs.DEVICE_CODENAME }}

    - name: Clone Vendor Tree
      run: |
        cd ~/rom
        git clone ${{ inputs.VENDOR_TREE }} -b ${{ inputs.VENDOR_TREE_BRANCH }} vendor/xiaomi/${{ inputs.DEVICE_CODENAME }}

    - name: Clone Kernel Tree
      run: |
        cd ~/rom
        git clone ${{ inputs.KERNEL_TREE }} -b ${{ inputs.KERNEL_BRANCH }} kernel/xiaomi/${{ inputs.DEVICE_CODENAME }}

    - name: Build ROM
      run: |
        cd ~/rom
        source build/envsetup.sh
        lunch lineage_${{ inputs.DEVICE_CODENAME }}-${{ inputs.BUILD_TYPE }}
        mka bacon -j$(nproc)
      continue-on-error: false

    - name: Set BUILD_DATE
      run: echo "BUILD_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: ~/rom/out/target/product/${{ inputs.DEVICE_CODename }}/*.zip
        name: "Full ROM for ${{ inputs.DEVICE_CODENAME }} â€“ ${{ env.BUILD_DATE }}"
        tag_name: ${{ github.run_id }}
        body: |
          **Manifest:** ${{ inputs.MANIFEST_URL }} @${{ inputs.MANIFEST_BRANCH }}
          **Device/Vendor/Kernel trees** included
          **Build date:** ${{ env.BUILD_DATE }}

    - name: Upload to SourceForge
      if: success()
      run: |
        # configure SSH: SOURCEFORGE_SSH contains private key
        mkdir -p ~/.ssh && echo "$SOURCEFORGE_SSH" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
        ssh-keyscan upload.sourceforge.net >> ~/.ssh/known_hosts
        scp ~/rom/out/target/product/${{ inputs.DEVICE_CODENAME }}/*.zip username@upload.sourceforge.net:/home/frs/project/yourproject/
      shell: bash

    - name: Send Telegram Notification
      if: always()
      uses: james-kua/notify-telegram-action@main
      with:
        workflow_name: 'ROM Build'
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        status: ${{ job.status }}
        message_format: markdown
        disable_preview: true
        timezone: 'Asia/Kathmandu'
